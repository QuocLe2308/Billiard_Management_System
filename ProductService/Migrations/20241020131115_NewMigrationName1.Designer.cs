// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductService.Data;

#nullable disable

namespace ProductService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241020131115_NewMigrationName1")]
    partial class NewMigrationName1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductService.Models.Drink", b =>
                {
                    b.Property<int>("DrinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrinkId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DrinkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrinkPrice")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("DrinkId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("ProductService.Models.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Sinh To",
                            CreatedAt = new DateTime(2024, 10, 20, 20, 11, 15, 407, DateTimeKind.Local).AddTicks(6932),
                            CreatedBy = 1,
                            UpdatedAt = new DateTime(2024, 10, 20, 20, 11, 15, 407, DateTimeKind.Local).AddTicks(6947)
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Bia",
                            CreatedAt = new DateTime(2024, 10, 20, 20, 11, 15, 407, DateTimeKind.Local).AddTicks(6950),
                            CreatedBy = 1,
                            UpdatedAt = new DateTime(2024, 10, 20, 20, 11, 15, 407, DateTimeKind.Local).AddTicks(6950)
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Nuoc Ngot",
                            CreatedAt = new DateTime(2024, 10, 20, 20, 11, 15, 407, DateTimeKind.Local).AddTicks(6951),
                            CreatedBy = 1,
                            UpdatedAt = new DateTime(2024, 10, 20, 20, 11, 15, 407, DateTimeKind.Local).AddTicks(6952)
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Coffee",
                            CreatedAt = new DateTime(2024, 10, 20, 20, 11, 15, 407, DateTimeKind.Local).AddTicks(6953),
                            CreatedBy = 1,
                            UpdatedAt = new DateTime(2024, 10, 20, 20, 11, 15, 407, DateTimeKind.Local).AddTicks(6953)
                        });
                });

            modelBuilder.Entity("ProductService.Models.Drink", b =>
                {
                    b.HasOne("ProductService.Models.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
